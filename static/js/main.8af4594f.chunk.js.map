{"version":3,"sources":["redux/reducer.js","fetchData.js","components/Header/Header.js","components/Favorites/Favorites.js","assets/weather-img.png","components/WeatherDashboard/WeatherDashboard.js","components/Home/Home.js","error/error.js","components/Dashboard/Dashboard.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","favoritesList","currentCity","currentWeather","searchOptions","currentCityId","action","type","optionsArray","payload","data","map","item","index","LocalizedName","push","name","locationKey","Key","DailyForecasts","input","newFav","city","textWeather","temp","locationId","Error","API_KEY","fetchData","dispatch","a","fetch","then","response","json","catch","rejected","console","log","Header","props","className","to","IconButton","sx","color","component","Favorites","Object","keys","length","style","textDecoration","onClick","Card","marginTop","display","flexDirection","flex","zIndex","cursor","transform","transition","WeatherDashboard","Link","split","WeatherText","Math","round","Temperature","Metric","Value","useState","favorites","includes","isFavorite","setIsFavorite","fToC","fTemp","useEffect","alt","src","weatherImg","date","Date","toLocaleString","weekday","Minimum","Maximum","Home","array","Array","fill","highlight","setHighlight","key","undefined","id","Autocomplete","options","onInputChange","_","newInputValue","res","message","document","getElementById","innerHTML","err","error","test","onHighlightChange","newHighlight","reason","width","renderInput","params","TextField","margin","label","variant","Dashboard","path","element","Team","createTheme","status","danger","palette","primary","main","darker","neutral","contrastText","added","initialState","App","useReducer","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8af4594f.chunk.js","sourcesContent":["export default function reducer(\r\n  state = {\r\n    favoritesList: [],\r\n    currentCity: [],\r\n    currentWeather: [],\r\n    searchOptions: [],\r\n    currentCityId: \"215854\",\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case \"get-search-list\":\r\n      state.searchOptions = [];\r\n      var optionsArray = [...action.payload.data];\r\n      optionsArray.map((item, index) => {\r\n        state.searchOptions[item.LocalizedName] = [];\r\n        state.searchOptions[item.LocalizedName].push({\r\n          name: item.LocalizedName,\r\n          locationKey: item.Key,\r\n        });\r\n      });\r\n      return { ...state };\r\n    case \"set-current-city\":\r\n      state.currentCity = [];\r\n      state.currentCity = [...action.payload.data.DailyForecasts];\r\n      return { ...state, currentCity: [...state.currentCity] };\r\n    case \"set-current-city-id\":\r\n      state.currentCityId = [action.payload.input];\r\n      return { ...state, currentCityId: [state.currentCityId] };\r\n    case \"set-current-weather\":\r\n      if (state.currentWeather) {\r\n        state.currentWeather = [];\r\n      }\r\n      state.currentWeather = [...action.payload.data];\r\n      return { ...state, currentWeather: [...state.currentWeather] };\r\n    case \"add-to-favorites\":\r\n      state.favoritesList[action.payload.newFav.city] = [];\r\n      state.favoritesList[action.payload.newFav.city].push({\r\n        city: action.payload.newFav.city,\r\n        textWeather: action.payload.newFav.textWeather,\r\n        temp: action.payload.newFav.temp,\r\n        locationId: action.payload.newFav.locationId,\r\n      });\r\n      return { ...state };\r\n    case \"remove-from-favorites\":\r\n      delete state.favoritesList[action.payload.city];\r\n      return { ...state };\r\n      // return { ...state , favoritesList: [...state.favoritesList]};\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","const API_KEY = \"UA01NJqMP0tlVpJexyIecrIlWXF2e1Kn\";\r\n\r\nexport default async function fetchData(dispatch, input, action) {\r\n  if (action !== \"autocomplete\") {\r\n    dispatch({\r\n      type: \"set-current-city-id\",\r\n      payload: { input },\r\n    });\r\n    await fetch(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${input}?apikey=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"set-current-weather\",\r\n          payload: { data },\r\n        });\r\n      }) .catch(rejected => {\r\n        console.log(rejected);\r\n    });\r\n     \r\n    await fetch(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${input}?apikey=${API_KEY}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"set-current-city\",\r\n          payload: { data },\r\n        });\r\n      }) .catch(rejected => {\r\n        console.log(rejected);\r\n    });\r\n  }\r\n  if (action === \"autocomplete\") {\r\n    await fetch(\r\n      `http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${input}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch({\r\n          type: \"get-search-list\",\r\n          payload: { data },\r\n        });\r\n      }) .catch(rejected => {\r\n        console.log(rejected);\r\n    });\r\n  }\r\n}\r\n","import IconButton from \"@mui/material/IconButton\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport Home from \"@mui/icons-material/Home\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <div className=\"header-weather-app\">\r\n      <label className=\"header-title\">Herolo Weather task</label>\r\n      <Link to=\"/Favorites\">\r\n        <IconButton\r\n          sx={{ color: \"#fff\" }}\r\n          aria-label=\"Favorites\"\r\n          component=\"span\"\r\n        >\r\n          <Favorite />\r\n        </IconButton>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <IconButton sx={{ color: \"#fff\" }} aria-label=\"Home\" component=\"span\">\r\n          <Home dispatch={props.dispatch} />\r\n        </IconButton>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import { Card } from \"@mui/material\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport fetchData from \"../../fetchData\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Favorites.css\";\r\n\r\nexport default function Favorites(props) {\r\n  return (\r\n    <div className=\"favorite-weather-app\">\r\n      {Object.keys(props.state.favoritesList).length !== 0 &&\r\n        Object.keys(props.state.favoritesList).map((item, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to=\"/\"\r\n                onClick={() =>\r\n                  fetchData(\r\n                    props.dispatch,\r\n                    props.state.favoritesList[item][0].locationId,\r\n                    \"\"\r\n                  )\r\n                }\r\n              >\r\n                <Card key={index} className=\"card-weather-favorites\">\r\n                  <div\r\n                    style={{\r\n                      marginTop: \"5px\",\r\n                      display: \"flex\",\r\n                      flexDirection: \"column\",\r\n                      flex: \"1\",\r\n                    }}\r\n                  >\r\n                    <label>{props.state.favoritesList[item][0].city}</label>\r\n                    <label>\r\n                      {props.state.favoritesList[item][0].temp}\r\n                      {\"\\xB0C\"}\r\n                    </label>\r\n                  </div>\r\n                  <label style={{ flex: \"2\" }}>\r\n                    {props.state.favoritesList[item][0].textWeather}\r\n                  </label>\r\n                </Card>\r\n              </Link>\r\n              <Favorite\r\n                className=\"favorites-icon-page\"\r\n                sx={{\r\n                  color: \"#035ce1d4\",\r\n                  zIndex: \"99999999\",\r\n                  cursor: \"pointer\",\r\n                  transform: \"scale(1)\",\r\n                  transition: \"all 0.3s\",\r\n                }}\r\n                onClick={() => {\r\n                  var city = props.state.favoritesList[item][0].city;\r\n                  props.dispatch({\r\n                    type: \"remove-from-favorites\",\r\n                    payload: { city },\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      {Object.keys(props.state.favoritesList).length === 0 && (\r\n        <label className={\"no-favorites-option\"}>No favorites yet</label>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/weather-img.67f77bfe.png\";","import { Card } from \"@mui/material\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorderOutlined\";\r\nimport weatherImg from \"../../assets/weather-img.png\";\r\nimport \"./WeatherDashboard.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function WeatherDashboard(props) {\r\n  const city = props.currentCity[0]?.Link.split(\"/\")[5];\r\n  const textWeather = props.currentWeather[0]?.WeatherText;\r\n  const temp = Math.round(props.currentWeather[0]?.Temperature.Metric.Value);\r\n  const [isFavorite, setIsFavorite] = useState(\r\n    Object.keys(props.favorites).includes(city)\r\n  );\r\n\r\n  function fToC(temp) {\r\n    var fTemp = temp;\r\n    var fToCel = Math.round(((fTemp - 32) * 5) / 9);\r\n    return fToCel + \"\\xB0C\";\r\n  }\r\n  useEffect(() => {\r\n    setIsFavorite(Object.keys(props.favorites).includes(city));\r\n  }, [city]);\r\n\r\n  return (\r\n    <Card className=\"weather-dashboard-app\">\r\n      <div className=\"weather-dashboard-header\">\r\n        <div className=\"current-weather-div\">\r\n          <img\r\n            alt=\"weather-img\"\r\n            className=\"turn-to-relative weather-img\"\r\n            src={weatherImg}\r\n          />\r\n          <div className=\"add-to-favorites-div\">\r\n            <label className=\"turn-to-relative\">{city}</label>\r\n            <label className=\"turn-to-relative\">{temp + \"\\xB0C\"}</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"add-to-favorites-div favorite\">\r\n          {isFavorite ? (\r\n            <Favorite\r\n              className=\"favorites-icon turn-to-relative\"\r\n              sx={{ color: \"#035ce1d4\" }}\r\n              onClick={() => {\r\n                setIsFavorite(!isFavorite);\r\n                props.dispatch({\r\n                  type: \"remove-from-favorites\",\r\n                  payload: { city },\r\n                });\r\n              }}\r\n            />\r\n          ) : (\r\n            <FavoriteBorder\r\n              sx={{ color: \"#035ce1d4\" }}\r\n              onClick={() => {\r\n                var newFav = {\r\n                  city: city,\r\n                  textWeather: textWeather,\r\n                  temp: temp,\r\n                  locationId: props.currentCityId\r\n                };\r\n                setIsFavorite(!isFavorite);\r\n                props.dispatch({\r\n                  type: \"add-to-favorites\",\r\n                  payload: { newFav },\r\n                });\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <label className=\"turn-to-relative weather-text\">{textWeather}</label>\r\n      <div className=\"weather-info\">\r\n        {props.currentCity.map((item, index) => {\r\n          var date = new Date(item.Date);\r\n          return (\r\n            <Card key={index} className=\"card-weather-dashboard\">\r\n              <label>\r\n                {date.toLocaleString(\"en-US\", { weekday: \"short\" })}\r\n              </label>\r\n              <label>\r\n                {\"min \" + fToC(item.Temperature.Minimum.Value)}\r\n                <br></br>\r\n                {\"max \" + fToC(item.Temperature.Maximum.Value)}\r\n              </label>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import { Autocomplete, TextField } from \"@mui/material\";\r\nimport error from \"../../error/error\";\r\nimport WeatherDashboard from \"../WeatherDashboard/WeatherDashboard\";\r\nimport fetchData from \"../../fetchData\";\r\nimport \"./Home.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Home(props) {\r\n  var array = new Array(Object.keys(props.searchOptions).length).fill(null);\r\n  const [highlight, setHighlight] = useState();\r\n\r\n  Object.keys(props.searchOptions).map((key, index) => {\r\n    array[index] = key;\r\n  });\r\n  useEffect(() => {\r\n    if (highlight === undefined) return;\r\n    var locationKey = props.searchOptions[highlight][0].locationKey;\r\n    fetchData(props.dispatch, locationKey, \"\");\r\n  }, [highlight]);\r\n  return (\r\n    <div className=\"home-weather-app\">\r\n      <span id=\"message\"></span>\r\n      <Autocomplete\r\n        id=\"combo-box-demo\"\r\n        options={array}\r\n        onInputChange={(_, newInputValue) => {\r\n          if (newInputValue) {\r\n            let res = /^[a-zA-Z ]+$/.test(newInputValue);\r\n            error(res);\r\n            fetchData(props.dispatch, newInputValue, \"autocomplete\");\r\n          }\r\n        }}\r\n        highlight={highlight}\r\n        onHighlightChange={(_, newHighlight, reason) => {\r\n          if (reason === \"keyboard\" || reason === \"mouse\") {\r\n            setHighlight(newHighlight);\r\n          }\r\n        }}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            className=\"home-weather-search\"\r\n            style={{ width: \"400px\", margin: \"20px 0 20px 0\" }}\r\n            id=\"outlined-basic\"\r\n            label=\"search\"\r\n            variant=\"standard\"\r\n          />\r\n        )}\r\n      />\r\n      <WeatherDashboard\r\n        currentCityId={props.currentCityId}\r\n        dispatch={props.dispatch}\r\n        favorites={props.favorites}\r\n        currentWeather={props.currentWeather}\r\n        currentCity={props.currentCity}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export default function getValidInput(res) {\r\n    var message;\r\n    message = document.getElementById(\"message\");\r\n    message.innerHTML = \"\";\r\n    try {\r\n    if (!res) throw \"invalid Input\";\r\n    else message.innerHTML = \"\"\r\n  } catch (err) {\r\n    message.innerHTML = err;\r\n  }\r\n}\r\n","import Header from \"../Header/Header\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Favorites from \"../Favorites/Favorites\";\r\nimport Home from \"../Home/Home\";\r\n\r\nexport default function Dashboard(props) {\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header></Header>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home dispatch={props.dispatch} currentCityId ={props.state.currentCityId} searchOptions={props.state.searchOptions} currentWeather={props.state.currentWeather} favorites={props.state.favoritesList} currentCity={props.state.currentCity}/>} />\r\n          <Route path=\"/Favorites\" element={<Favorites state={props.state} dispatch={props.dispatch} />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n","import { createTheme } from \"@mui/material/styles\";\r\n\r\nexport default function Team() {\r\n  const theme = createTheme({\r\n    status: {\r\n      danger: \"#e53e3e\",\r\n    },\r\n   \r\n    palette: {\r\n      primary: {\r\n        main: \"#0971f1\",\r\n        darker: \"#053e85\",\r\n      },\r\n      neutral: {\r\n        main: \"#fff\",\r\n        contrastText: \"#fff\",\r\n      },\r\n      added: {\r\n        main: \"#035ce1d4\",\r\n        contrastText: \"#035ce1d4\",\r\n      },\r\n    },\r\n  });\r\n  return theme;\r\n}\r\n","import \"./App.css\";\r\nimport reducer from \"./redux/reducer\";\r\nimport fetchData from \"./fetchData\";\r\nimport { useEffect, useReducer } from \"react\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\nimport theme from \"./theme\";\r\n// const API_KEY = \"TakPQd2dhAo27AdPpqAjhbpe9kkAFQb9\";\r\n\r\nconst initialState = {\r\n  favoritesList: [],\r\n  currentCity: [],\r\n  currentWeather: [],\r\n  searchOptions:[],\r\n  currentCityId: \"215854\",\r\n};\r\n\r\nfunction App() {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    fetchData(dispatch,state.currentCityId) \r\n  },[]);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Dashboard state={state} dispatch={dispatch} theme={theme} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}